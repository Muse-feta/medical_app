// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(PATIENT)
  firstName String?
  lastName  String?
  phone     String?  // Add phone number to the User model if needed
  appointmentsAsPatient Appointment[] @relation("PatientAppointments")
  appointmentsAsDoctor  Appointment[] @relation("DoctorAppointments")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Appointment {
  id          Int      @id @default(autoincrement())
  patientId   Int
  doctorId    Int
  startTime   DateTime
  endTime     DateTime
  status      AppointmentStatus @default(PENDING)
  phoneNumber String?  // Field for phone number
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  patient     User    @relation("PatientAppointments", fields: [patientId], references: [id])
  doctor      User    @relation("DoctorAppointments", fields: [doctorId], references: [id])
}

enum Role {
  PATIENT
  DOCTOR
  RECEPTIONIST
  ADMIN
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}